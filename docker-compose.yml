version: "3.3"

services:
  web:
    build:
      context: .
    image: web
    container_name: web
    env_file:
      - ./envfiles/web.env
      - ./envfiles/postgres.env
    ports:
      - "80:8000"
    volumes:
      - ./app:/app
      - ./app/logs:/app/logs
    depends_on:
      - db
      - redis
    secrets:
      - auth_token 
    command: gunicorn -b 0.0.0.0:8000 app:app --workers=4 --reload

  scheduler:
    image: web
    container_name: scheduler
    volumes:
      - ./app:/app
    env_file:
      - ./envfiles/redis.env
      - ./envfiles/postgres.env
      - ./envfiles/web.env
    secrets:
      - auth_token 
    depends_on:
      - web
      - redis
    command: celery -A tasks beat -l info --logfile=logs/scheduler.log

  worker:
    image: web
    container_name: worker
    volumes:
      - ./app:/app
    env_file:
      - ./envfiles/redis.env
      - ./envfiles/postgres.env
      - ./envfiles/web.env
    secrets:
      - auth_token 
    depends_on:
      - web
      - redis
    command: celery -A tasks worker -l info --logfile=logs/worker.log

  redis:
    image: redis:6-alpine
    container_name: redis

  db:
    image: postgres:latest
    container_name: db
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: always
    ports:
      - 5432
    env_file:
      - ./envfiles/postgres.env

volumes:
  webfiles:
  db-data:

secrets:
  auth_token:
    file: ./misc/auth_token.txt
